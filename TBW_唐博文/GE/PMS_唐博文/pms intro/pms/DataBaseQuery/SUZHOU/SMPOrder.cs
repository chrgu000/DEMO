// 
// Generated by ActiveRecord Generator
// 
//
namespace PMMWS
{
    using Castle.ActiveRecord;
    using Castle.ActiveRecord.Queries;
    
    [ActiveRecord("[PMS_SM_PReport]")]
    public class SMPOrder : ActiveRecordBase
    {
        
        private string _pieId;
        
        private string _faultId;
        
        private decimal _stopTimeP;
        
        private decimal _mTimeP;
        
        private string _weekNum;

        private string _faultType;
        
        [PrimaryKey(PrimaryKeyType.Assigned, "Pie_Id")]
        public string PieId
        {
            get
            {
                return this._pieId;
            }
            set
            {
                this._pieId = value;
            }
        }
        
        [Property(Column="Fault_Id")]
        public string FaultId
        {
            get
            {
                return this._faultId;
            }
            set
            {
                this._faultId = value;
            }
        }
        
        [Property()]
        public decimal StopTimeP
        {
            get
            {
                return this._stopTimeP;
            }
            set
            {
                this._stopTimeP = value;
            }
        }
        
        [Property()]
        public decimal MTimeP
        {
            get
            {
                return this._mTimeP;
            }
            set
            {
                this._mTimeP = value;
            }
        }
        
        [Property()]
        public string WeekNum
        {
            get
            {
                return this._weekNum;
            }
            set
            {
                this._weekNum = value;
            }
        }

        [Property(Column = "Fault_Type")]
        public string FaultType
        {
            get
            {
                return this._faultType;
            }
            set
            {
                this._faultType = value;
            }
        }
        
        public static void DeleteAll()
        {
            ActiveRecordBase.DeleteAll(typeof(SMPOrder));
        }
        
        public static SMPOrder[] FindAll()
        {
            return ((SMPOrder[])(ActiveRecordBase.FindAll(typeof(SMPOrder))));
        }
        
        public static SMPOrder Find(string PieId)
        {
            try
            {
                return ((SMPOrder)(ActiveRecordBase.FindByPrimaryKey(typeof(SMPOrder), PieId)));
            }
            catch
            {
                return null;
            }
        }

        public static SMPOrder[] FindbyWeeksNum(string WeeksNum)
        {
            SimpleQuery qe = new SimpleQuery(typeof(SMPOrder), @"from SMPOrder where WeekNum = ?", WeeksNum);
            SMPOrder[] SMPOrders = (SMPOrder[])ExecuteQuery(qe);
            return SMPOrders;
        }
     
    }
}
