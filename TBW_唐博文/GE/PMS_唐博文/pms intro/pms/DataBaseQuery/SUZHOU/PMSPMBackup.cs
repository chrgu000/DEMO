// 
// Generated by ActiveRecord Generator
// 
//
namespace PMMWS
{
    using Castle.ActiveRecord;
    using Castle.ActiveRecord.Queries;
 
    [ActiveRecord("PMS_PMBackup")]
    public class PMSPMBackup : ActiveRecordBase
    {
        
        private int _pMBackupId;

        private int _orders;
        
        private string _numbers;
        
        private string _machineType;
        
        private string _machineName;
        
        private string _deviceNumber;
        
        private string _deviceCode;
        
        private string _measureContents;
        
        private string _registerCode;
        
        private string _seriesCode;
        
        private string _isCal;
        
        private string _reportCode;
        
        private string _checkTime;
        
        private string _nextCheckTime;
        
        private string _frequency;

        private string _position;

        private string _type;

        private string _type1;

        private string _test;
        
        [PrimaryKey(PrimaryKeyType.Native, "PMBackup_id")]
        public int PMBackupId
        {
            get
            {
                return this._pMBackupId;
            }
            set
            {
                this._pMBackupId = value;
            }
        }
        
        [Property()]
        public string Numbers
        {
            get
            {
                return this._numbers;
            }
            set
            {
                this._numbers = value;
            }
        }
        
        [Property(Column="Machine_Type")]
        public string MachineType
        {
            get
            {
                return this._machineType;
            }
            set
            {
                this._machineType = value;
            }
        }
        
        [Property(Column="Machine_Name")]
        public string MachineName
        {
            get
            {
                return this._machineName;
            }
            set
            {
                this._machineName = value;
            }
        }
        
        [Property(Column="Device_Number")]
        public string DeviceNumber
        {
            get
            {
                return this._deviceNumber;
            }
            set
            {
                this._deviceNumber = value;
            }
        }

         [Property()]
        public int Orders
        {
            get
            {
                return this._orders;
            }
            set
            {
                this._orders = value;
            }
        }

        
        [Property(Column="Device_Code")]
        public string DeviceCode
        {
            get
            {
                return this._deviceCode;
            }
            set
            {
                this._deviceCode = value;
            }
        }
        
        [Property()]
        public string MeasureContents
        {
            get
            {
                return this._measureContents;
            }
            set
            {
                this._measureContents = value;
            }
        }
        
        [Property()]
        public string RegisterCode
        {
            get
            {
                return this._registerCode;
            }
            set
            {
                this._registerCode = value;
            }
        }
        
        [Property()]
        public string SeriesCode
        {
            get
            {
                return this._seriesCode;
            }
            set
            {
                this._seriesCode = value;
            }
        }
        
        [Property()]
        public string IsCal
        {
            get
            {
                return this._isCal;
            }
            set
            {
                this._isCal = value;
            }
        }
        
        [Property()]
        public string ReportCode
        {
            get
            {
                return this._reportCode;
            }
            set
            {
                this._reportCode = value;
            }
        }
        
        [Property()]
        public string CheckTime
        {
            get
            {
                return this._checkTime;
            }
            set
            {
                this._checkTime = value;
            }
        }
        
        [Property()]
        public string NextCheckTime
        {
            get
            {
                return this._nextCheckTime;
            }
            set
            {
                this._nextCheckTime = value;
            }
        }
        
        [Property()]
        public string Frequency
        {
            get
            {
                return this._frequency;
            }
            set
            {
                this._frequency = value;
            }
        }
        
        [Property()]
        public string Position
        {
            get
            {
                return this._position;
            }
            set
            {
                this._position = value;
            }
        }

        [Property()]
        public string Type
        {
            get
            {
                return this._type;
            }
            set
            {
                this._type = value;
            }
        }
        [Property()]
        public string Test
        {
            get
            {
                return this._test;
            }
            set
            {
                this._test = value;
            }
        }
        [Property()]
        public string Type1
        {
            get
            {
                return this._type1;
            }
            set
            {
                this._type1 = value;
            }
        }

        public static void DeleteAll()
        {
            ActiveRecordBase.DeleteAll(typeof(PMSPMBackup));
        }
        
        public static PMSPMBackup[] FindAll()
        {
            return ((PMSPMBackup[])(ActiveRecordBase.FindAll(typeof(PMSPMBackup))));
        }
        
        public static PMSPMBackup Find(int PMBackupId)
        {
            return ((PMSPMBackup)(ActiveRecordBase.FindByPrimaryKey(typeof(PMSPMBackup), PMBackupId)));
        }

        public static PMSPMBackup[] FindbyType(string type)
        {
            SimpleQuery qe = new SimpleQuery(typeof(PMSPMBackup), @"from PMSPMBackup where Type = ?", type);
            PMSPMBackup[] PMSPMBackups = (PMSPMBackup[])ExecuteQuery(qe);
            return PMSPMBackups;
        }
        public static PMSPMBackup[] FindbyTypeAndType1(string type,string type1)
        {
            SimpleQuery qe = new SimpleQuery(typeof(PMSPMBackup), @"from PMSPMBackup where Type = ? and Type1=?", type,type1);
            PMSPMBackup[] PMSPMBackups = (PMSPMBackup[])ExecuteQuery(qe);
            return PMSPMBackups;
        }

        public static string[] FindbyDistinctQuery(string type)
        {
            SimpleQuery query = new SimpleQuery(typeof(PMSPMBackup), typeof(string), @"select distinct backup.Type1 from PMSPMBackup backup where Type =?",type);
            return (string[])ExecuteQuery(query);
        }

        public static PMSPMBackup[] FindbyDatetime(string dt1, string dt2)
        {
            SimpleQuery qe = new SimpleQuery(typeof(PMSPMBackup), @"from PMSPMBackup where Test > ? and Test < ?", dt1, dt2);
            PMSPMBackup[] PMSPMBackups = (PMSPMBackup[])ExecuteQuery(qe);
            return PMSPMBackups;
        }


    }
}
