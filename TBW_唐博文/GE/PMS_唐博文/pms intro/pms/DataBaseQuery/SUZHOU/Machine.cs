// 
// Generated by ActiveRecord Generator
// 
//
namespace PMMWS
{
    using Castle.ActiveRecord;
    using Castle.ActiveRecord.Queries;
    
    [ActiveRecord("PMS_Machine")]
    public class Machine : ActiveRecordBase
    {
        
        private string _machineCode;
        
        private int _orders;
        
        private string _factory;
        
        private string _machineBu;
        
        private string _machineName;
        
        private string _machineType;
        
        private string _machineSerialNum;
        
        private string _producingArea;
        
        private string _supplier;
        
        private string _useDate;
        
        [PrimaryKey(PrimaryKeyType.Assigned, "Machine_Code")]
        public string MachineCode
        {
            get
            {
                return this._machineCode;
            }
            set
            {
                this._machineCode = value;
            }
        }
        
        [Property()]
        public int Orders
        {
            get
            {
                return this._orders;
            }
            set
            {
                this._orders = value;
            }
        }
        
        [Property()]
        public string Factory
        {
            get
            {
                return this._factory;
            }
            set
            {
                this._factory = value;
            }
        }
        
        [Property(Column="Machine_Bu")]
        public string MachineBu
        {
            get
            {
                return this._machineBu;
            }
            set
            {
                this._machineBu = value;
            }
        }
        
        [Property(Column="Machine_Name")]
        public string MachineName
        {
            get
            {
                return this._machineName;
            }
            set
            {
                this._machineName = value;
            }
        }
        
        [Property(Column="Machine_Type")]
        public string MachineType
        {
            get
            {
                return this._machineType;
            }
            set
            {
                this._machineType = value;
            }
        }
        
        [Property(Column="Machine_SerialNum")]
        public string MachineSerialNum
        {
            get
            {
                return this._machineSerialNum;
            }
            set
            {
                this._machineSerialNum = value;
            }
        }
        
        [Property()]
        public string ProducingArea
        {
            get
            {
                return this._producingArea;
            }
            set
            {
                this._producingArea = value;
            }
        }
        
        [Property()]
        public string Supplier
        {
            get
            {
                return this._supplier;
            }
            set
            {
                this._supplier = value;
            }
        }
        
        [Property()]
        public string UseDate
        {
            get
            {
                return this._useDate;
            }
            set
            {
                this._useDate = value;
            }
        }
        
        public static void DeleteAll()
        {
            ActiveRecordBase.DeleteAll(typeof(Machine));
        }
        
        public static Machine[] FindAll()
        {
            return ((Machine[])(ActiveRecordBase.FindAll(typeof(Machine))));
        }
        
        public static Machine Find(string MachineCode)
        {
            return ((Machine)(ActiveRecordBase.FindByPrimaryKey(typeof(Machine), MachineCode)));
        }

        public static Machine[] FindbyMachineBu(string MachineBu)
        {
            SimpleQuery qe = new SimpleQuery(typeof(Machine), @"from Machine where Machine_Bu = ? ", MachineBu);
            Machine[] Machines = (Machine[])ExecuteQuery(qe);
            return Machines;
        }

        public static int[] FindMachineOrders(string MachineBu)
        {
            SimpleQuery query = new SimpleQuery(typeof(Machine), typeof(int), @"select distinct ma.Orders from Machine ma where Machine_Bu =?",MachineBu);
            return (int[])ExecuteQuery(query);
        }
    }
}
