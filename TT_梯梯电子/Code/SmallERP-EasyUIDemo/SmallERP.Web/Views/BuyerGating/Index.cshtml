@{
    Layout = "~/Views/Shared/_ManageLayout.cshtml";
}
@section JS{
    <script type="text/javascript">
        var actionUrl = {
            GetList: '/BuyerGating/GetList',
            GetQty: '/BuyerGating/GetQty',
            GetPlanner: '/BuyerGating/GetPlanner',
            GetGroup: '/BuyerGating/GetProductGroupList',
            GetVersion: '/BuyerGating/GetVersionList',
            GetDownloadExcel: '/BuyerGating/DownloadExcel',
        }

        $(function () {
            //加载版本
            $('#queryVersion').combobox({
                url: actionUrl.GetVersion,
                valueField: 'iID',
                textField: 'iText',
                onLoadSuccess: function () { //加载完成后,设置选中第一项
                    var val = $(this).combobox("getData");
                    for (var item in val[0]) {
                        if (item == "iID") {
                            $(this).combobox("select", val[0][item]);
                        }
                    }
                    getList();
                },
            });

            //加载计划员
            $('#queryGroup').combobox({
                url: actionUrl.GetGroup,
                valueField: 'iID',
                textField: 'iText'
            });

            //加载项目组
            $('#queryGroup').combobox({
                url: actionUrl.GetGroup,
                valueField: 'iID',
                textField: 'iText',
                multiple: true,//设置可以多选
                formatter: function (row) { //formatter方法就是实现了在每个下拉选项前面增加checkbox框的方法
                    var opts = $(this).combobox('options');
                    return '<input type="checkbox" class="combobox-checkbox">' + row[opts.textField] + '</input>'
                },
                onLoadSuccess: function () {  //下拉框数据加载成功调用
                    var opts = $(this).combobox('options');
                    var target = this;
                    var values = $(target).combobox('getValues');//获取选中的值的values
                    $.map(values, function (value) {
                        var el = opts.finder.getEl(target, value);
                        el.find('input.combobox-checkbox')._propAttr('checked', true);
                    })
                },
                onSelect: function (row) { //选中一个选项时调用
                    var opts = $(this).combobox('options');
                    //获取选中的值的values
                    $("#queryGroup").val($(this).combobox('getValues'));

                    //设置选中值所对应的复选框为选中状态
                    var el = opts.finder.getEl(this, row[opts.valueField]);
                    el.find('input.combobox-checkbox')._propAttr('checked', true);
                },
                onUnselect: function (row) {//不选中一个选项时调用
                    var opts = $(this).combobox('options');
                    //获取选中的值的values
                    $("#queryGroup").val($(this).combobox('getValues'));

                    var el = opts.finder.getEl(this, row[opts.valueField]);
                    el.find('input.combobox-checkbox')._propAttr('checked', false);
                },
            });

            // 查询按钮
            $('#btnQuery').click(function () {
                var queryVersion = $('#queryVersion').combobox('getValue');
                if (queryVersion == "") {
                    $.messager.alert('信息', "需选择版本号！");
                    return;
                }
                getList();
            });

            //导出
            $('#btnExport').click(function () {
                var queryVersion = $('#queryVersion').combobox('getValue');
                var queryName = $('#queryName').val();
                var queryPlanner = $('#queryPlanner').combobox('getValue');
                var queryGroup = $('#queryGroup').val();
                if (queryVersion == "") {
                    $.messager.alert('信息', "需选择版本号！");
                    return;
                }
                doDownLoad(actionUrl.GetDownloadExcel + "?queryVersion=" + queryVersion + "&queryName=" + queryName + "&queryPlanner=" + queryPlanner + "&queryGroup=" + queryGroup);
            });

            //点击清除
            $('#btnReset').click(function () {
                $('#queryVersion').combobox('reset');
                $('#queryPlanner').combobox('reset');
                $('#queryGroup').combobox('clear');//清空选中项
                $('#queryGroup').val('');
                $('#queryGroup').combobox('loadData', {});
                $('#queryGroup').combobox('reload');

                $('#queryName').textbox('reset');
                getList();
            });

            //getList();
        });

        function getList() {
            $('#grid').datagrid('loadData', { total: 0, rows: [] });
            var Month1;
            var Month2;
            var Month3;
            var Month4;
            var Month5;
            var Month6;
            var Month7;
            $.ajax({
                type: "get",
                url: actionUrl.GetQty,
                cache: false,
                data: { },
                datatype: "json",
                async: false,
                success: function (data) {
                    $.each(data, function (index, result) {
                        switch(index){
                            case 0:
                                Month1 = data[index].EgMonth;
                                break;
                            case 1:
                                Month2 = data[index].EgMonth;
                                break;
                            case 2:
                                Month3 = data[index].EgMonth;
                                break;
                            case 3:
                                Month4 = data[index].EgMonth;
                                break;
                            case 4:
                                Month5 = data[index].EgMonth;
                                break;
                            case 5:
                                Month6 = data[index].EgMonth;
                                break;
                            case 6:
                                Month7 = data[index].EgMonth;
                                break;
                        }
                    });
                }
            });
            // grid工具栏添加按钮
            $('#grid').datagrid({
                url: actionUrl.GetList,
                queryParams: {
                    queryVersion: $('#queryVersion').combobox('getValue'),
                    queryName: $('#queryName').val(),
                    queryPlanner: $('#queryPlanner').combobox('getValue'),
                    queryGroup: $('#queryGroup').val()
                },
                pagination: true,//分页
                pageSize: 50,
                pageList: [50, 1000, 1500, 2000],
                toolbar: [
                ],
                columns: [[
                    //{ field: 'sTKVersion', title: 'sTKVersion', width: 180 },
                    { field: 'sProductGroup', title: 'Product Group', width: 180 },
                    { field: 'sBuyer', title: 'Buyer', width: 120 },
                    { field: 'iItemNO', title: 'TT P/N', width: 120 },
                    { field: 'dtmDuedate', title: 'Reqdate', width: 120, },
                    {
                        field: 'Period01', title: Month1, width: 150, align: 'center', sortable: true,
                        formatter: function (value, rec) {
                            if (rec.Period01 >= 0) {
                                return rec.Period01;
                            } else {
                                return "(" + (-rec.Period01) + ")";
                            }
                        }
                    },
                    {
                        field: 'Period02', title: Month2, width: 150, align: 'center', sortable: true,
                        formatter: function (value, rec) {
                            if (rec.Period02 >= 0) {
                                return rec.Period02;
                            } else {
                                return "(" + (-rec.Period02) + ")";
                            }
                        }
                    },
                    {
                        field: 'Period03', title: Month3, width: 150, align: 'center', sortable: true,
                        formatter: function (value, rec) {
                            if (rec.Period03 >= 0) {
                                return rec.Period03;
                            } else {
                                return "(" + (-rec.Period03) + ")";
                            }
                        }
                    },
                    {
                        field: 'Period04', title: Month4, width: 150, align: 'center', sortable: true,
                        formatter: function (value, rec) {
                            if (rec.Period04 >= 0) {
                                return rec.Period04;
                            } else {
                                return "(" + (-rec.Period04) + ")";
                            }
                        }
                    },
                    {
                        field: 'Period05', title: Month5, width: 150, align: 'center', sortable: true,
                        formatter: function (value, rec) {
                            if (rec.Period05 >= 0) {
                                return rec.Period05;
                            } else {
                                return "(" + (-rec.Period05) + ")";
                            }
                        }
                    },
                    {
                        field: 'Period06', title: Month6, width: 150, align: 'center', sortable: true,
                        formatter: function (value, rec) {
                            if (rec.Period06 >= 0) {
                                return rec.Period06;
                            } else {
                                return "(" + (-rec.Period06) + ")";
                            }
                        }
                    },
                    {
                        field: 'Period07', title: Month7, width: 150, align: 'center', sortable: true,
                        formatter: function (value, rec) {
                            if (rec.Period07 >= 0) {
                                return rec.Period07;
                            } else {
                                return "(" + (-rec.Period07) + ")";
                            }
                        }
                    },
                    { field: 'dockDate', title: 'dock date', width: 120 },
                    { field: 'Gating', title: 'Gating', width: 120 },
                    { field: 'sPONo', title: 'PO NO.', width: 120 },
                    { field: 'fOpenQTY', title: 'PO qty', width: 120 },
                    { field: 'Vendor', title: 'Vendor', width: 120 },
                    { field: 'MPN', title: 'MPN', width: 120 },
                    { field: 'MFR', title: 'MFR', width: 120 },
                    { field: 'Remark', title: 'Remark', width: 120 },
                    { field: 'Action', title: 'Action', width: 120 },
                ]],
            });
        }

        Date.prototype.format = function (fmt) { //author: meizz
            var o = {
                "m+": this.getMonth() + 1, //月份
                "d+": this.getDate(), //日
                "H+": this.getHours(), //小时
                "M+": this.getMinutes(), //分
                "s+": this.getSeconds(), //秒
                "q+": Math.floor((this.getMonth() + 3) / 3), //季度
                "S": this.getMilliseconds() //毫秒
            };
            if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
            for (var k in o)
                if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
            return fmt;
        }

        function doDownLoad(url) {
            $.messager.progress({
                title: '请稍后',
                msg: '加载中...'
            });
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, true);    // 也可以使用POST方式，根据接口
            xhr.responseType = "blob";  // 返回类型blob
            // 定义请求完成的处理函数，请求前也可以增加加载框/禁用下载按钮逻辑
            xhr.onload = function () {
                // 请求完成
                if (this.status === 200) {
                    // 返回200
                    var blob = this.response;
                    var reader = new FileReader();
                    reader.readAsDataURL(blob);  // 转换为base64，可以直接放入a表情href
                    reader.onload = function (e) {
                        // 转换完成，创建一个a标签用于下载
                        var a = document.createElement('a');
                        a.download = "导出Excel" + '.xlsx';

                        a.href = e.target.result;
                        $("body").append(a);  // 修复firefox中无法触发click
                        a.click();
                        $(a).remove();
                        $.messager.progress('close');
                    }
                }
                else {
                    //alert("导出错误" + this.statusText);
                    $.messager.progress('close');
                    $.messager.alert('导出失败', "导出失败");
                }
            };
            // 发送ajax请求
            xhr.send()
        }
    </script>
}
<body class="easyui-layout">
    <!-- 顶部 -->
    <div data-options="region:'north'" style="height:34px" >
        <table>
            <tr>
                <td>版本：</td>
                <td>
                    <input class="easyui-combobox" type="text" name="queryVersion" id="queryVersion" />
                </td>
                <td>采购员：</td>
                <td>
                    <input class="easyui-combobox" name="queryPlanner" id="queryPlanner" >
                </td>
                <td>项目组：</td>
                <td>
                    <input class="easyui-combobox" name="queryGroup" id="queryGroup" editable="false">
                </td>
                <td>物料编码：</td>
                <td>
                    <input class="easyui-textbox" type="text" name="queryName" id="queryName" />
                </td>
                <td>
                    <a id="btnQuery" href="#" class="easyui-linkbutton" data-options="iconCls:'icon-search'" style="width:80px">Search</a>
                    <a id="btnExport" href="#" class="easyui-linkbutton" data-options="iconCls:'icon-export'" style="width:80px">Export</a>
                    <a id="btnReset" href="#" class="easyui-linkbutton" data-options="iconCls:'icon-reload'" style="width:80px">Reset</a>
                </td>
            </tr>
        </table>
    </div>
    <!-- 列表 -->
    <div data-options="region:'center'">
        <table id="grid" class="easyui-datagrid" style="border-bottom:none;" title="List" data-options="rownumbers:true,singleSelect:true,collapsible:false,fit:true"></table>
    </div>
</body>