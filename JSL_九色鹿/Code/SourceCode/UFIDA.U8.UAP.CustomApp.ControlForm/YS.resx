<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExcel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAACJUlEQVQ4T5WT70tTURjHz18TVCDEjVpz
        a0za8uZkS7RoISMyLSIJhclsF6+yDCRsYd0g0qAyQlKyEhpJGL0oMAqGRVJELxIrnfvpZG7x7Txn7rS9
        MTvwgcs93/O555znuQyA4EjPjMHBPzBK+RLyoVF7gV/JPH4m1/EjsY7FOJHDwkqR77EcKMOpkMiHhu5p
        LHHB9FwSkWgCU+8TmHwbx8RsDGNvloWEdkE5jpRIgdsfwXIqj5mPKTznkmdc8pRLHnHJOJd8WsjKo1CW
        IyTs7GQdtsL84poUEK6OKcJgbQ9VLtp8UOYzFwSGo+i6FUVo9ANC9+agtj8GOznqgBbux/GLJ2AP2jeW
        AIdC9TB1VfOtukCZ8uOU7sR5ZgKsebi46FrkKuovO2HtNEMNOLDHr2C/bhZzlCm/E7pYEtS0jPH6D1lE
        iMb1l1fg6/fCdtqCOs0p3uWQBmXKL5aqQyW2+e6DeQZMIkhDvaRCe9KHY2EfLLoVp+62ou+BDsqUV4dK
        TH1S7b0DpuqKWGwLWKEEFZh79iE4fgHNI14o54pzlHk1n5YS6hNqtr1NI2A1/iq0dLbC0+2GOuBArXYQ
        TXojOm6fx+FeN45qDaDM6y8ZKaFmo47d7bkJZmnfIb6y2aDM7NfVCgm1/S7XDTBT2zZshXffshUSavuq
        2qG/P8XOA2Fk1n4jvUGKk8wSBSRWC4gTmQJW0nnEONT2tEYKttsHDQ7+j0HjD4eF54btEjwmAAAAAElF
        TkSuQmCC
</value>
  </data>
  <data name="btnRefresh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAB8UlEQVQ4T6XP3UuTURzAcf+f6Ca6LxSC
        LsIgaYl1E6YmFDUzI0i2QAR7z9m82BZubqLLyZ5tXTSdW9oMNW2b0zFkUtKmcy/uxce2Cd8eo4uCR6P8
        wrk5h/M551f1e/OBMFanl1dGAdXTAbRGO4vS3q/jg1uOrGIecyN4PuKeW8a9FKNfmOLuczOXb/Vgc7gO
        Ryxj40z4AySLInGxRCwvspAsIix9Q2VwcfbKPfx+jzwSCEcZcnhZ39qmWK6QK1VI7pRZSe8wuZZjcC5O
        S5eBHo1OHjCNunk7vShdKlEo71Gs7JERK0TTIr7YNsOLKR4YvZypb5cHbqu1TEfXieV22RLLZL5XiBdK
        hDaLeFazmGcTPLTMc6pOKQ8809kYHP/E/EaRlYxINLtLUJr/w9c8jnAK/dQ6So0LRXOnPDAsTKDqt/Fu
        LY/vS0FaedzS14VIGtNcgu7REIq2lzQ0tsoDmxtxGm5088jqYySQwhbMMCTNbZhJ0CNEuKoeoPqiEnNv
        ozyw38zsAheau7im1tNpnJRe/Uxbn5P69l5O193khaqWbKT7cCQYCmOxv6ep4zE1inZqLnXQcl+LXqeh
        +uRx/Npjf0cOym4zU3v+3NEQ2xvj0RHryOufiOPJCe401fw7sJ/LaeF6ayODpr7/A/6squoH7gOMxwa0
        w8sAAAAASUVORK5CYII=
</value>
  </data>
</root>